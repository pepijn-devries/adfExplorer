# Generated by roxygen2: do not edit by hand

S3method("adf_directory<-",adf_device)
S3method("adf_directory<-",adf_device.character)
S3method("adf_directory<-",adf_device.virtual_path)
S3method("adf_entry_name<-",adf_device)
S3method("adf_entry_name<-",adf_device.character)
S3method("adf_entry_name<-",adf_device.virtual_path)
S3method("adf_entry_name<-",adf_file_con)
S3method("adf_entry_name<-",virtual_path)
S3method("volume_name<-",adf_device)
S3method(adf_dir_exists,adf_device)
S3method(adf_dir_exists,virtual_path)
S3method(adf_directory,adf_device)
S3method(adf_entry_info,adf_device)
S3method(adf_entry_info,adf_file_con)
S3method(adf_entry_info,virtual_path)
S3method(adf_entry_info.adf_device,character)
S3method(adf_entry_info.adf_device,virtual_path)
S3method(adf_file_con,adf_device)
S3method(adf_file_con,virtual_path)
S3method(adf_file_con.adf_device,character)
S3method(adf_file_exists,adf_device)
S3method(adf_file_exists,virtual_path)
S3method(as.character,virtual_path)
S3method(bytes_free,adf_device)
S3method(close,adf_device)
S3method(close,adf_file_con)
S3method(copy_adf_entry,character)
S3method(copy_adf_entry,virtual_path)
S3method(copy_adf_entry.character,virtual_path)
S3method(copy_adf_entry.virtual_path,character)
S3method(copy_adf_entry.virtual_path,virtual_path)
S3method(device_capacity,adf_device)
S3method(device_type,adf_device)
S3method(format,adf_block)
S3method(format,adf_device)
S3method(format,adf_file_con)
S3method(format,virtual_path)
S3method(is_bootable,adf_device)
S3method(is_dircache,adf_device)
S3method(is_fast_file_system,adf_device)
S3method(is_international,adf_device)
S3method(is_write_protected,adf_device)
S3method(list_adf_entries,adf_device)
S3method(list_adf_entries,virtual_path)
S3method(list_adf_entries.adf_device,character)
S3method(list_adf_entries.adf_device,virtual_path)
S3method(make_adf_dir,adf_device)
S3method(make_adf_dir,virtual_path)
S3method(make_adf_dir.adf_device,character)
S3method(make_adf_dir.adf_device,virtual_path)
S3method(move_adf_entry,character)
S3method(move_adf_entry,virtual_path)
S3method(move_adf_entry.character,virtual_path)
S3method(move_adf_entry.virtual_path,character)
S3method(move_adf_entry.virtual_path,virtual_path)
S3method(n_volumes,adf_device)
S3method(prepare_adf_device,adf_device)
S3method(print,adf_block)
S3method(print,adf_device)
S3method(print,adf_file_con)
S3method(print,virtual_path)
S3method(readBin,adf_file_con)
S3method(readBin,default)
S3method(readLines,adf_file_con)
S3method(readLines,default)
S3method(read_adf_block,adf_device)
S3method(remove_adf_entry,adf_device)
S3method(remove_adf_entry,virtual_path)
S3method(remove_adf_entry.adf_device,character)
S3method(remove_adf_entry.adf_device,virtual_path)
S3method(seek,adf_file_con)
S3method(summary,adf_file_con)
S3method(volume_capacity,adf_device)
S3method(volume_name,adf_device)
S3method(writeBin,adf_file_con)
S3method(writeBin,default)
S3method(writeLines,adf_file_con)
S3method(writeLines,default)
S3method(write_adf_block,adf_device)
S3method(write_adf_block.adf_device,adf_block)
S3method(write_adf_block.adf_device,default)
S3method(write_adf_block.adf_device,raw)
export("adf.disk.name<-")
export("adf.file.mode<-")
export("adf.file.time<-")
export("adf_directory<-")
export("adf_directory<-.adf_device")
export("adf_directory<-.adf_device.character")
export("adf_directory<-.adf_device.virtual_path")
export("adf_entry_name<-")
export("adf_entry_name<-.adf_device")
export("adf_entry_name<-.adf_file_con")
export("amigaBlock<-")
export("current.adf.dir<-")
export("volume_name<-")
export(adf.disk.name)
export(adf.file.exists)
export(adf.file.info)
export(adf.file.mode)
export(adf.file.remove)
export(adf.file.size)
export(adf.file.time)
export(adf_dir_exists)
export(adf_directory)
export(adf_entry_info)
export(adf_entry_info.adf_device)
export(adf_entry_info.adf_file_con)
export(adf_entry_info.virtual_path)
export(adf_entry_name)
export(adf_file_con)
export(adf_file_con.adf_device)
export(adf_file_exists)
export(amigaBlock)
export(amigaDateToRaw)
export(amigaIntToRaw)
export(as_adf_block)
export(bitmapToRaw)
export(blank.amigaDOSDisk)
export(bytes_free)
export(close_all_devices)
export(compress_adf)
export(connect_adf)
export(copy_adf_entry)
export(copy_adf_entry.character)
export(copy_adf_entry.virtual_path)
export(create_adf_device)
export(current.adf.dir)
export(decompress_adz)
export(demo_adf)
export(device_capacity)
export(device_type)
export(dir.create.adf)
export(dir.exists.adf)
export(displayRawData)
export(format.adf_block)
export(format.adf_device)
export(format.adf_file_con)
export(format.virtual_path)
export(get.blockID)
export(get.diskLocation)
export(is.amigaDOS)
export(is.bootable)
export(is_bootable)
export(is_dircache)
export(is_fast_file_system)
export(is_international)
export(is_write_protected)
export(list.adf.files)
export(list_adf_entries)
export(list_adf_entries.adf_device)
export(list_adf_entries.virtual_path)
export(make_adf_dir)
export(make_adf_dir.adf_device)
export(make_adf_dir.virtual_path)
export(move_adf_entry)
export(move_adf_entry.character)
export(move_adf_entry.virtual_path)
export(n_volumes)
export(new_adf_block)
export(prepare_adf_device)
export(put.adf.file)
export(rawToAmigaDate)
export(rawToAmigaInt)
export(rawToBitmap)
export(read.adf)
export(read.adz)
export(readBin)
export(readBin.adf_file_con)
export(readLines)
export(readLines.adf_file_con)
export(read_adf_block)
export(remove_adf_entry)
export(remove_adf_entry.adf_device)
export(remove_adf_entry.virtual_path)
export(virtual_path)
export(volume_capacity)
export(volume_name)
export(write.adf)
export(write.adz)
export(writeBin)
export(writeBin.adf_file_con)
export(writeLines)
export(writeLines.adf_file_con)
export(write_adf_block)
importFrom(methods,setOldClass)
useDynLib(adfExplorer, .registration = TRUE)
